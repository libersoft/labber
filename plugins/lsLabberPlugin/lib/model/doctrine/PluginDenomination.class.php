<?php

/**
 * This abstract class has been auto-generated by the Doctrine ORM Framework
 */
abstract class PluginDenomination extends BaseDenomination
{
  public function addAlias($alias)
  {
    if ($alias !== $this->name)
    {
      $aliases = json_decode($this->aliases);

      if ($aliases === null)
      {
        $aliases = array();
      }

      if (!in_array($alias, $aliases))
      {
        $aliases[] = $alias;
        $this->aliases = json_encode($aliases);
        $this->save();
      }
    }
  }

  public function getDefaultDenominationMethod($matrix = null) {

    // ritorna il metodo di default

    if($matrix) {
      // se mi hanno passato una matrice cerco il metodo associato
      // a quella matrice
      $q = Doctrine_Query::create()
          ->from('DenominationMethod dm')
          ->leftJoin('dm.DenominationMethodMatrix dmm')
          ->where('dm.denomination_id = ?', $this->id)
          ->andWhere('dmm.matrix_id = ?', $matrix->id)
          ->andWhere('dmm.favorite = ?', 1);

      $dm = $q->fetchOne();
    } else {
      $dm = false;
    }

    if (!$dm) {
      // altrimenti cerco il metodo di default
      $q = Doctrine_Query::create()
          ->from('DenominationMethod dm')
          ->where('dm.denomination_id = ?', $this->id)
          ->andWhere('dm.is_default = ?', 1);

      $dm = $q->fetchOne();
    }

    // se non l'ho trovato ritorno false
    return $dm;
  }

  public function getDenominationMethod($method) {
  // dato un metodo torna l'oggetto denominationMethod
    $q = Doctrine_Query::create()
        ->from('DenominationMethod dm')
        ->where('dm.denomination_id = ?', $this->id)
        ->andWhere('dm.method_id = ?', $method->id);

    return $q->fetchOne();

  }

  public function getDefaultUM($method = null, $matrix = null, $customer = null) {
    // ritorna l'unita' di misura di default per in dato metodo, matrice, customer
    // se non la trova deve tornare falso
    if($method == null) {
      $method = $this->getDefaultMethod();
    }

    // se il metodo e' ancora null, ci arrendiamo e torniamo false
    if (!$method){
      return false;
    }

    $dm = $this->getDenominationMethod($method);
    $um = $dm->getDefaultUM($matrix, $customer);

    return $um;
  }

  public function getDefaultMethod($matrix = null) {
    // se non c'e' il default method deve tornare false
    $dm = $this->getDefaultDenominationMethod($matrix);
    if ($dm)
    {
      return $dm->getMethod();
    } else   {
      return false;
    }

  }
}
