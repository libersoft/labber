<?php

/**
 * This abstract class Pluginhas been auto-generated by the Doctrine ORM Framework
 */
abstract class PluginSampleType extends BaseSampleType {

  public function getMethodsAsArray($denomination_id) {
    // devo restituire un array per popolare il dropdown di scelta del metodo

    

    // mi prendo tutti i metodi che mi servono
    $q = Doctrine_Query::create()
        ->from('DeterminationType dt')
        ->where('dt.denomination_id = ?', $denomination_id)
        ->whereIn('dt.matrix_id', $this->getMatrixesAsArray());

    // e creo il mio array
    foreach ($q->execute() as $dt) {
    // nella stringa ci metto anche fra parentesi la tecnica analitica
      $methods[$dt->getMethodId()] = $dt->getMethod()->getShortName() . ' ('. $dt->getMethod()->getDescription() . ')';
    }

    return $methods;
  }

  public function getMatrixesAsArray() {
    if($this->id != 0) {
      $q = Doctrine_Query::create()
          ->from('DepartmentSampleType d')
          ->where('d.sample_type_id = ?', $this->id);
      foreach ($q->execute() as $dst) {
        $matrixes[] = $dst->getMatrixId();
      }
      return $matrixes;
    } else {
      // prendo tutto
      $q = Doctrine_Query::create()
          ->from('DeterminationType d')
          ->select('matrix_id')
          ->groupBy('d.matrix_id')
          ;
      foreach ($q->execute() as $dst) {
        $matrixes[] = $dst->getMatrixId();
      }
      return $matrixes;
    }
  }

  public function isAssociatedWith($department) {
  //$st_departments = $this->getDepartments();

    $q = Doctrine_Query::create()
        ->from('DepartmentSampleType d')
        ->where('d.department_id = ?', $department->id)
        ->andWhere('d.sample_type_id = ?', $this->id)
    ;

    $dst = $q->fetchOne();

    if(!$dst) {
      return false;
    } else {
      return true;
    }

  }

  public function getMatrixFor($department) {
    $q = Doctrine_Query::create()
        ->from('DepartmentSampleType d')
        ->where('d.department_id = ?', $department->id)
        ->andWhere('d.sample_type_id = ?', $this->id)
    ;


    $dst = $q->fetchOne();
    $matrix = $dst->getMatrix();

    if($matrix == "") {
      return false;
    } else {
      return $matrix;
    }
  }
  

}
